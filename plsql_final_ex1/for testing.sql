BEGIN
IF LOGIN('SUP','123456') THEN
	DBMS_OUTPUT.PUT_LINE('LOGIN IS VALID');
ELSE DBMS_OUTPUT.PUT_LINE('LOGIN IS INVALID');
END IF;
END;
/ 

BEGIN
	IF CANREAD('SUP','S1') THEN
		DBMS_OUTPUT.PUT_LINE('CAN READ');
	END IF;
END;
/

DECLARE
BO BOOLEAN;
BEGIN
BO := CANREAD('TOM','F1');
END;
/

DECLARE
BO BOOLEAN;
BEGIN
	BO := CANINSERT('TOM','F1');
	BO := CANINSERT('SUP','S1');
	BO := CANINSERT('BEN','F2');
	BO := CANINSERT('INA','IF1');
END;
/

DECLARE
BO BOOLEAN;
BEGIN
	BO := CANUPDATE('TOM','F1');
	BO := CANUPDATE('SUP','S1');
	BO := CANUPDATE('BEN','F2');
	BO := CANUPDATE('INA','IF1');
END;
/

DECLARE
BO BOOLEAN;
BEGIN
	BO := CANDELETE('TOM','F1');
	BO := CANDELETE('SUP','S1');
	BO := CANDELETE('BEN','F2');
	BO := CANDELETE('INA','IF1');
	BO := CANDELETE('ABC','R1');
END;
/

DECLARE
BO BOOLEAN;
BEGIN
	BO := pck_security.CANEXECUTE('TOM','F1');
	BO := pck_security.CANEXECUTE('SUP','S1');
	BO := pck_security.CANEXECUTE('BEN','F2');
	BO := pck_security.CANEXECUTE('INA','IF1');
	BO := pck_security.CANEXECUTE('ABC','R1');
END;
/